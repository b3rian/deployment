name: CI/CD Pipeline

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to set up Python and install dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
        
      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # Job to test FastAPI app (main.py)
  fastapi_test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Run FastAPI tests
        run: |
          pytest  # Assuming you have tests for your FastAPI app

  # Job to deploy FastAPI app via Docker
  deploy_fastapi:
    runs-on: ubuntu-latest
    needs: fastapi_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t fastapi-app .

      - name: Run Docker container
        run: |
          docker run -d -p 8000:80 fastapi-app

  # Job to test Streamlit app (my_app.py)
  streamlit_test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Streamlit tests
        run: |
          pytest  # Assuming you have tests for your Streamlit app

  # Job to deploy Streamlit app via Docker
  deploy_streamlit:
    runs-on: ubuntu-latest
    needs: streamlit_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -f Dockerfile.streamlit -t streamlit-app .

      - name: Run Docker container
        run: |
          docker run -d -p 8501:8501 streamlit-app
